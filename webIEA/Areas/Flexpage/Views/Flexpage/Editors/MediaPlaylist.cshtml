@using Flexpage.Code.Common;
@using Flexpage.Code.Helpers;
@using Flexpage.Models;
@using Flexpage.Domain.Enum;
@model Flexpage.Models.MediaPlaylistModel

@{
    string modalID = Model.Alias + "Modal";
    int step = (int)Model.Step;
    int type = (int)Model.GalleryBlockType;
}

<div id="fp_videoPlaylistEditorContainer" class="pictureManagerContainer page-gallery-block gallery-block row">
    <script type="text/javascript">
        fp_popupControlChangeTitle('@(Model.MediaType.Name==MediaTypeName.AudioPlaylist.GetDisplay()? "AUDIO PLAYLIST" : "VIDEO PLAYLIST")', '#fp_videoPlaylistEditorContainer');

        function fp_videoPlaylistSetCurrentTab(tab) {
            $("#fp_videoPlaylistCurrentTab").val(tab);
        }

        function fp_preSaveBlock() {

        }

        function fp_prePostAjaxForm() {
            console.log("fp_prePostAjaxForm");
            // fp_StoreFromHtmlEditorToHidden('FullText');
            $("#Info_FullText_CurrentText").val(fp_HtmlEditor_FullText.GetHtml());
        }

        function fp_customSaveBlock() {
            fp_PostAjaxForm('#fp_videoPlaylistEditorContainer', { command: 'save' });
            fp_AfterSave();
        }

        $(function () {

            $('div.colorpicker-component').each(function (index, element) {
                element = $(element);
                element.colorpicker();
            });

            $('#ConstrainProportions').change(function () {
                if (this.checked) {
                    $('#HeightType[value="Auto"]').prop("checked", true);
                }
            });

            $('input[type="radio"][name="HeightType"]').each(function (index, element) {
                $(element).change(function () {
                    if (this.checked && $(this).prop("value") != "Auto") {
                        $('#ConstrainProportions').prop("checked", false);
                    }
                })
            });

            jQuery("input.square-data[type=hidden]").each(function (index, el) {
                el = jQuery(el);
                el.parent().find('.blue-square').remove();
                el.parent().find("div[data-position='" + el.val() + "']").append("<div class='blue-square'></div>");
            });

            // onImageLoad();

            jQuery(".position").find(".square").click(function (event) {
                if (!jQuery(this).closest(".position").hasClass('disabled')) {
                    jQuery(this).closest(".position").find("input").val(jQuery(this).attr("data-position"));
                    jQuery(this).closest(".position").find('.blue-square').remove();
                    jQuery(this).append("<div class='blue-square'></div>");
                }
            });

        });

        function fp_videoPlaylistChangeInfoLanguage(langCode) {
            fp_PostAjaxForm('#fp_videoPlaylistEditorContainer', { command: 'changeinfolanguage', parameters: langCode });
        }

        function fp_videoPlaylistDeleteItem(index) {
            fp_PostAjaxForm('#fp_videoPlaylistEditorContainer', { command: 'deleteitem', parameters: index });
        }

        function fp_videoPlaylistSelectItem(index, mediaType) {
            fp_PostAjaxForm('#fp_videoPlaylistEditorContainer', { command: 'selectitem', parameters: index, mediaType: mediaType });
        }

        function fp_videoPlaylistAddItem() {
            fp_PostAjaxForm('#fp_videoPlaylistEditorContainer', { command: 'additem', parameters: '' });
        }

        function setElementVisible(elementId, visible) {
            var el = $("#" + elementId);
            if (visible)
                el.show();
            else
                el.hide();
        }



        function videoPlaylist_setActive(me) {
            $('div.videoplaylist-item').each(function (index, element) {
                element = $(element);
                var childImg = element.find('img.img-videoplaylist-item');
                if (childImg.hasClass('selected'))
                    childImg.removeClass('selected');
            });

            var me = $(me);
            var childImg = me.find('img.img-videoplaylist-item');
            if (!childImg.hasClass('selected')) {
                childImg.addClass('selected');
            }
        }

    </script>

    @Html.Partial("~/Areas/Flexpage/Views/Shared/DisplayTemplates/_VideoScripts.cshtml", "fp_videoPlaylistEditorContainer")
    @Html.Partial("~/Areas/Flexpage/Views/Shared/DisplayTemplates/_CmsTextScripts.cshtml", new ScriptModel() { Container = "fp_videoPlaylistEditorContainer", Command = "changeinfolanguage" })
    @*<div id="in-editor-modal-header-content" style="display:none">
            <div class="col-md-8">
                <h3 class="modal-title">VIDEO PLAYLIST</h3>
            </div>
            <div class="col-md-3">
            </div>
            <div class="col-md-1">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>*@
    @using (Ajax.BeginForm("Update" + Model.MediaType.Name, "Admin", null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = "fp_videoPlaylistEditorContainer" }, new { @id = "fp_BlockEditorForm", @role = "form" }))
    {
        @Html.Partial("~/Areas/Flexpage/Views/Shared/EditorTemplates/_Block.cshtml", Model)
        @Html.HiddenFor(m => m.DisplayType)
        @Html.HiddenFor(m => m.Step)
        @Html.HiddenFor(m => m.MediaType)
        @Html.HiddenFor(m => m.CurrentTab, new { @id = "fp_videoPlaylistCurrentTab" })

        <input id="GalleryBlockType" name="GalleryBlockType" type="hidden" value="@type" />
        <ul class="nav nav-pills tabs-navigation">
            <li class="@(Model.CurrentTab == 0 ? "active" : "")"><a data-toggle="pill" href="#videoplaylist-settings" onclick="fp_videoPlaylistSetCurrentTab(0)">Settings</a></li>
            <li class="@(Model.CurrentTab == 1 ? "active" : "")"><a data-toggle="pill" href="#videoplaylist-items-simple" onclick="fp_videoPlaylistSetCurrentTab(1)">Items</a></li>
        </ul>
        <div class="tab-content" style="margin-top: -9px">
            <div id="videoplaylist-settings" class="tab-pane fade form-type @(Model.CurrentTab == 0 ? "active in" : "")" style="padding-top: 0px; padding-bottom: 15px">
                <!--Tab SETTINGS-->
                @Html.Partial("~/Areas/Flexpage/Views/Shared/EditorTemplates/_MediaPlaylistSettings.cshtml", Model)
            </div>
            <!--Tab ITEMS-->
            <div id="videoplaylist-items-simple" class="tab-pane fade form-type @(Model.CurrentTab == 1 ? "active in" : "")" style="padding-top: 0px; padding-bottom: 15px">
                <!--Items Details - Video Details-->
                <div class="">

                    @Html.EditorFor(m => m.CurrentItem, "_" + Model.CurrentItem.MediaType.Name)
                    <a href="#" style="float:right; padding-right:16px" onclick="fp_videoPlaylistDeleteItem(@Model.CurrentItem.Index);">Delete item</a>
                </div>
                <div style="padding-left: 24px; padding-right: 24px ">
                    <h4>
                        Items
                    </h4>
                    @{
                        int i = 0;
                    }
                    @foreach (MediaModel e in Model.Items)
                    {
                        @Html.HiddenFor(m => m.MediaType)
                        <div class="videoplaylist-item@(e.Index == Model.CurrentItem.Index ? "-selected" : "")">
                            <img class="videoplaylist-item-img" onclick="fp_videoPlaylistSelectItem(@i,'@e.MediaType.Name')" src="@(e.CurrentLocalization != null ? e.CurrentLocalization.GetThumbUrl() : "")" />
                            <div class="videoplaylist-item-label">
                                @e.Title.Current
                            </div>

                            @Html.EditorFor(m => m.Items[i], "_MediaData")
                        </div>
                        i++;
                    }
                    <div class="videoplaylist-item" onclick="fp_videoPlaylistAddItem()">
                        <img class="videoplaylist-item-img" src="~/Areas/Flexpage/Content/Images/images/add-video.png" />
                        <div class="videoplaylist-item-label">
                            Add item
                        </div>
                    </div>

                </div>

            </div>
        </div>
    }

</div>
