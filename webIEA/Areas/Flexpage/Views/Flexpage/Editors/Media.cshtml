@using Flexpage.Code.Common;
@using Flexpage.Code.Helpers;
@using Flexpage.Models;
@using Flexpage.Domain.Enum;
@model Flexpage.Models.MediaModel

@{
    string modalID = Model.Alias + "Modal";
    int step = (int)Model.Step;
    int type = (int)Model.GalleryBlockType;
}
<script type="text/javascript">

    function fp_videoSetCurrentTab(tab) {
        $("#fp_videoCurrentTab").val(tab);
    }

    function useAdvanced() {
        fp_PostAjaxForm('#videoManagerContainer', { command: 'changeeditortype', parameters: 'advanced' }, 'fp_TrackInitialize(' + false + ')');
    }

    function useSimple() {
        fp_PostAjaxForm('#videoManagerContainer', { command: 'changeeditortype', parameters: 'simple' }, 'fp_TrackInitialize(' + false + ')');
    }

    function fp_preSaveBlock() {

    }

    function fp_customSaveBlock() {
        fp_PostAjaxForm('#videoManagerContainer', { command: 'save' });
        fp_AfterSave();
    }

    function fp_videoChangeVideoLanguage(langCode) {
        let isDirty = IsFormDirty('fp_BlockEditorForm');
        fp_PostAjaxForm('#videoManagerContainer', { command: 'changevideolanguage', parameters: langCode }, 'fp_TrackInitialize(' + isDirty + ')');
    }
    function fp_videoChangeInfoLanguage(langCode) {
        let isDirty = IsFormDirty('fp_BlockEditorForm');
        fp_PostAjaxForm('#videoManagerContainer', { command: 'changeinfolanguage', parameters: langCode }, 'fp_TrackInitialize(' + isDirty + ')');
    }

    function fp_videoVideoUploaded(sender, event) {
        fp_PostAjaxForm('#videoManagerContainer', { command: 'videouploaded', parameters: event.callbackData }, 'fp_TrackInitialize(' + true + ')');
    }

    function fp_videoThumbUploaded(sender, event) {
        fp_PostAjaxForm('#videoManagerContainer', { command: 'thumbuploaded', parameters: event.callbackData }, 'fp_TrackInitialize(' + true + ')');
    }

    function fp_videoOnThumbLoad() {
        var externalDropZone = $("#externalThumbDropZone");
        var uploadedImage = $("#uploadedThumb");
        if (uploadedImage.attr("src") != null && uploadedImage.attr("src") != "")
            setElementVisible("dragZone", false);
    }

    function fp_videoOnVideoLoad() {
        var externalDropZone = $("#externalVideoDropZone");
        var uploadedVideo = $("#uploadedVideo");
        if (uploadedVideo.attr("src") != null && uploadedVideo.attr("src") != "")
            setElementVisible("dragZone", false);
    }

    function setElementVisible(elementId, visible) {
        var el = $("#" + elementId);
        if (visible)
            el.show();
        else
            el.hide();
    }

    function fp_videoVideoDropZoneEnter(sender, event) {
        if (event.dropZone.id == 'externalVideoDropZone')
            setElementVisible('videoDropZone', true);
    }

    function fp_videoVideoDropZoneLeave(sender, event) {
        if (event.dropZone.id == 'externalVideoDropZone')
            setElementVisible('videoDropZone', false);
    }

    function fp_videoThumbDropZoneEnter(sender, event) {
        if (event.dropZone.id == 'externalThumbDropZone')
            setElementVisible('thumbDropZone', true);
    }

    function fp_videoThumbDropZoneLeave(sender, event) {
        if (event.dropZone.id == 'externalThumbDropZone')
            setElementVisible('thumbDropZone', false);
    }

    function fp_videoDeleteThumb() {
        // $("#uploadedThumb").attr("src", "");
        // $('#videoManagerContainer input[type=hidden]#LocalizedThumb_CurrentLocalization').val(null);
        // onImageLoad();
        fp_PostAjaxForm('#videoManagerContainer', { command: 'deletethumb' });
    }

    function fp_videoDeleteVideo() {
        // $("#uploadedVideo").attr("src", "");
        // $('#videoManagerContainer input[type=hidden]#LocalizedThumb_CurrentLocalization').val(null);
        // onVideoLoad();
        fp_PostAjaxForm('#videoManagerContainer', { command: 'deletevideo' });
    }

</script>

<div id="videoManagerContainer" class="flexpage pictureManagerContainer page-gallery-block gallery-block">
    <div id="in-editor-modal-header-content" style="display:none">
        <div class="col-md-8">
            <h3 class="modal-title">@Model.BlockType.ToUpper()</h3>
        </div>
        <div class="col-md-3">
            @* <div class="header-modal-menu">
                    <a onclick="javascript:jQuery('#videoManagerContainer').find('#EditorType').val(1);useSimple(); return false;" class="@(Model.EditorType == Flexpage.Models.EditorType.Simple?"item-active-modal":"" )">Simple</a>
                    <a onclick="javascript:jQuery('#videoManagerContainer').find('#EditorType').val(2);useAdvanced(); return false;" class="@(Model.EditorType == Flexpage.Models.EditorType.Advanced?"item-active-modal":"" )">Advanced </a>
                </div> *@
        </div>
        <div class="col-md-1">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="fp_beforeClosePopUp(this)">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
    <div class="row">
        @using (Ajax.BeginForm("Update" + Model.MediaType.Name, "Admin", null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = "videoManagerContainer" }, new { @id = "fp_BlockEditorForm", @role = "form", forTraking = "all" }))
        {
            @Html.HiddenFor(m => m.ID)
            @Html.HiddenFor(m => m.Alias)
            @Html.HiddenFor(m => m.EditorType)
            @Html.HiddenFor(m => m.Step)
            @Html.HiddenFor(m => m.Alias)
            @Html.HiddenFor(m => m.BlockType)
            @Html.HiddenFor(m => m.AdminMode)
            @Html.HiddenFor(m => m.CssClass)
            @Html.HiddenFor(m => m.EditorPostfix)
            @Html.HiddenFor(m => m.CurrentTab, new { @id = "fp_videoCurrentTab" })
            @Html.EditorFor(m => m.CurrentLocalization, "LocalizedMedia")

            for (int i = 0; i < Model.Localizations.Count; i++)
            {
                @Html.EditorFor(m => m.Localizations[i], "LocalizedMedia")
            }

            <input id="GalleryBlockType" name="GalleryBlockType" type="hidden" value="@type" />

            <ul class="nav nav-pills tabs-navigation">
                <li class="@(Model.CurrentTab == 0 ? "active": "")"><a data-toggle="pill" href="#video-settings" onclick="fp_videoSetCurrentTab(0)">Settings</a></li>
                <li class="@(Model.CurrentTab == 1 ? "active": "")"><a data-toggle="pill" href="#video-items-simple" onclick="fp_videoSetCurrentTab(1)">Items</a></li>
            </ul>
            <div class="tab-content">
                <div id="video-settings" class="tab-pane fade form-type @(Model.CurrentTab == 0 ? "active in": "")">
                        <div class="col-md-12">
                            <!--Tab SETTINGS-->
                            @Html.Partial("~/Areas/Flexpage/Views/Shared/EditorTemplates/_MediaSettings.cshtml", Model)
                        </div>
                </div>

                <!--Tab ITEMS-->
                <div id="video-items-simple" class="tab-pane fade form-type @(Model.CurrentTab == 1 ? "active in": "")">
                    <!--Items Details - Video Details-->
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <h4>
                                    @Model.MediaType.Name
                                </h4>
                                <div class="col-md-12">
                                    <div class="languages">
                                        @Html.EditorFor(m => m.VideoLanguageSelector, "LanguageSelector")
                                    </div>
                                    <br />

                                    @if (Model.CurrentLocalization == null || Model.CurrentLocalization.MediaUrl == null)
                                    {
                                        <div id="externalVideoDropZone" class="dropZoneExternalFree" style="width: 100%; height: 250px">
                                            <div id="videoDragZone">
                                                <span class="freeDragZoneText">Drag @Model.MediaType.Name.ToLower() here</span>
                                            </div>
                                            <div id="videoDropZone" style='display:none;'>
                                                <span class="freeDropZoneText">Drop @Model.MediaType.Name.ToLower() here</span>
                                            </div>
                                        </div>
                                        <div class="videoUploadContainer">
                                            @{
                                                    var allowedFileExtensions = new string[] { ".webm", ".ogv", ".ogg", ".mp4" };
                                                    if (Model.MediaType.Name == "Audio")
                                                    {
                                                        allowedFileExtensions = new string[] { ".mp3", ".wav", ".ogg" };
                                                    }
                                                }
                                                @Html.Partial("~/Areas/Flexpage/Views/Shared/UploadControlPartial.cshtml", new Flexpage.Models.FileUploaderModel
                                                {
                                                    Name = "fp_videoVideoUploader",
                                                    OnFileUploaded = "fp_videoVideoUploaded",
                                                    DialogTriggerID = "externalVideoDropZone",
                                                    EnableDragAndDrop = true,
                                                    EnableFileList = false,
                                                    EnableMultiSelect = false,
                                                    ExternalDropZoneID = "externalVideoDropZone",
                                                    UploadMode = UploadControlUploadMode.Auto,
                                                    OnDropZoneEnter = "fp_videoVideoDropZoneEnter",
                                                    OnDropZoneLeave = "fp_videoVideoDropZoneLeave",
                                                    ShowUploadButton = false,
                                                    BrowseButtonCssClass = "pictureFileUpload",
                                                    AllowedFileExtensions = allowedFileExtensions
                                       })
                                        </div>
                                    }
                                    else
                                    {
                                        var widthSettings = "100%";
                                        var heightSettings = "100%";
                                        if (Model.MediaType.Name == "Audio")
                                        {
                                            <audio @(Model.DisplayControls ? "controls" : "") @(Model.Loop ? "loop" : "") width="@widthSettings" height="@(heightSettings=="100%"?"":heightSettings)" style="width:@widthSettings;height:@(heightSettings=="100%"?"":heightSettings)">
                                                <source src="@Model.CurrentLocalization.MediaUrl" type='@MimeTypeMap.GetMimeType(Path.GetExtension(Model.CurrentLocalization.MediaUrl))' />
                                                @if (Model.DisplayTitle)
                                                {
                                                    <track kind=captions srclang='en' label="@Model.Title.Current" default />
                                                }
                                                <p class="vjs-no-js">
                                                    To view this audio please enable JavaScript, and consider upgrading to a web browser that
                                                    <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 audio</a>
                                                </p>
                                            </audio>
                                        }
                                        else
                                        {
                                            <video class="video-js" @(Model.DisplayControls ? "controls" : "") @(Model.AutoPlay ? "autoplay" : "") @(Model.Loop ? "loop" : "") width="@widthSettings" height="@heightSettings" style="width:@widthSettings; height:@heightSettings"
                                                   poster="@Model.CurrentLocalization.ThumbUrl">
                                                <source src="@Model.CurrentLocalization.MediaUrl" type='@MimeTypeMap.GetMimeType(Path.GetExtension(Model.CurrentLocalization.MediaUrl))' />
                                                @if (Model.DisplayTitle)
                                                {
                                                    <track kind=captions srclang='en' label="@Model.Title.Current" default />
                                                }
                                                <p class="vjs-no-js">
                                                    To view this video please enable JavaScript, and consider upgrading to a web browser that
                                                    <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
                                                </p>
                                            </video>
                                        }
                                        <div class="form-group">
                                            <a href="#" onclick="fp_videoDeleteVideo();">Delete @Model.MediaType.Name.ToLower()</a>
                                        </div>
                                        if (Model.MediaType.Name != MediaTypeName.Audio.GetDisplay())
                                        {
                                            if (Model.CurrentLocalization.ThumbUrl != null)
                                            {
                                                @* <img id="uploadedThumb" src="@Model.CurrentLocalization.ThumbUrl" alt="" class="picture-uploaded-image"
                                                    style='@(!string.IsNullOrEmpty(Model.CurrentLocalization.ThumbUrl) ? "" : "display:none;")' onload="fp_videoOnThumbLoad()" /> *@
                                                <div class="form-group">
                                                    <a href="#" onclick="fp_videoDeleteThumb();">Delete thumbnail</a>
                                                </div>
                                            }
                                            else
                                            {
                                                <div id="externalThumbDropZone" class="dropZoneExternalFree" style="width: 100%; height: 250px">
                                                    <div id="thumbDragZone">
                                                        <span class="freeDragZoneText">Drag a thumbnail here</span>
                                                    </div>
                                                    <div id="thumbDropZone" style='display:none;'>
                                                        <span class="freeDropZoneText">Drop a thumbnail here</span>
                                                    </div>
                                                </div>
                                                <div class="thumbUploadContainer">
                                                    @Html.Partial("~/Areas/Flexpage/Views/Shared/UploadControlPartial.cshtml", new Flexpage.Models.FileUploaderModel
                                               {
                                                   Name = "fp_videoThumbUploader",
                                                   OnFileUploaded = "fp_videoThumbUploaded",
                                                   DialogTriggerID = "externalThumbDropZone",
                                                   EnableDragAndDrop = true,
                                                   EnableFileList = false,
                                                   EnableMultiSelect = false,
                                                   ExternalDropZoneID = "externalThumbDropZone",
                                                   UploadMode = UploadControlUploadMode.Auto,
                                                   OnDropZoneEnter = "fp_videoThumbDropZoneEnter",
                                                   OnDropZoneLeave = "fp_videoThumbDropZoneLeave",
                                                   ShowUploadButton = false,
                                                   BrowseButtonCssClass = "pictureFileUpload"
                                               })
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </div>

                            <div class="col-md-6 image-details">
                                <h4>
                                    @Model.MediaType.Name details
                                </h4>
                                <div class="languages">
                                    @Html.EditorFor(m => m.InfoLanguageSelector, "LanguageSelector")
                                </div>
                                <div class="form-group form-fields">
                                    <label for="img-title">Title:</label>
                                    @Html.EditorFor(m => m.Title, "LocalizedString")
                                </div>
                                <div class="form-group form-fields">
                                    <label for="description">Description:</label>
                                    @Html.EditorFor(m => m.Description, "LocalizedString")
                                </div>
                            </div>

                        </div>
                </div>
            </div>
        }

        <script type="text/javascript">
            $(function () {

                $('div.colorpicker-component').each(function (index, element) {
                    element = $(element);
                    element.colorpicker();
                });

                $('#ConstrainProportions').change(function () {
                    if (this.checked) {
                        $('#HeightType[value="Auto"]').prop("checked", true);
                    }
                });

                $('input[type="radio"][name="HeightType"]').each(function (index, element) {
                    $(element).change(function () {
                        if (this.checked && $(this).prop("value") != "Auto") {
                            $('#ConstrainProportions').prop("checked", false);
                        }
                    })
                });

                // fp_videoActivateTab(@Model.CurrentTab);

                jQuery("input.square-data[type=hidden]").each(function (index, el) {
                    el = jQuery(el);
                    el.parent().find('.blue-square').remove();
                    el.parent().find("div[data-position='" + el.val() + "']").append("<div class='blue-square'></div>");
                });

                // onImageLoad();

                jQuery(".position").find(".square").click(function (event) {
                    if (!jQuery(this).closest(".position").hasClass('disabled')) {
                        jQuery(this).closest(".position").find("input").val(jQuery(this).attr("data-position"));
                        jQuery(this).closest(".position").find('.blue-square').remove();
                        jQuery(this).append("<div class='blue-square'></div>");
                    }
                });


            });


        </script>

    </div>
</div>
