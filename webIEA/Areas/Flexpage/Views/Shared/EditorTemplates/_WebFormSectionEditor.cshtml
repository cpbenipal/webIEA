@using Flexpage.Code.Helpers
@using Flexpage.Models
@using Flexpage.Code.Common

@model Flexpage.Models.WebFormSectionModel
@{
    string currentBlockID = string.Format("webFormBlock{0}Section{1}", Model.FormID, Model.Index);
}

<li class="ui-state-default" data-index="@Model.Index">
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.Index)
    @Html.HiddenFor(m => m.ReadOnly)

    <div class="row">
        <div class="col-md-12">
            @*<div style="width: 100%; height: 8px; background-color: #FFFFFF; margin-bottom: 4px" ondrop="fp_webFormSectionsDrop(event, '@Model.Index')" ondragenter="fp_webFormSectionsDropAreaEnter(this)" ondragleave="fp_webFormSectionsDropAreaLeave(this)"></div>*@
            <div class="panel-group" style="margin-bottom: 4px">
                <div class="panel panel-default" draggable="true" ondragstart="fp_webFormSectionDrag(event, @Model.Index)">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" href="#@currentBlockID" class="align-box">@Model.Name<span class="pull-right"><i class="fas fa-chevron-down rotate"></i></span></a>

                        </h4>
                    </div>
                </div>
            </div>
        </div>
        <div id="@currentBlockID" class="col-md-12 panel-collapse collapse collapse-field-container">
            <div class="col-md-12">
                <div class="row" style="margin-bottom: 6px; display: flex; flex-flow: row nowrap; padding: 0 15px; ">
                    <div class="fp_label" style="flex: auto 0 0">
                        Name
                    </div>
                    <div style="flex: auto 1 1; padding-left: 6px">
                        @if (Model.ReadOnly)
                        {
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @readonly = Model.ReadOnly ? "readonly" : "" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        }
                    </div>
                    <div class="fp_label" style="flex: auto 0 0; padding-left: 6px">
                        Show title
                    </div>
                    <div class="fp_label" style="flex: auto 0 0; padding-left: 6px">
                        @if (Model.ReadOnly)
                        {
                            @Html.HiddenFor(m => m.ShowTitle)
                            @Html.CheckBoxFor(m => m.ShowTitle, new { @disabled = "", @class = "custom-control-input" })
                        }
                        else
                        {
                            @Html.CheckBoxFor(m => m.ShowTitle, new { @class = "custom-control-input" })
                        }
                    </div>
                </div>

                <div class="row" style="margin-bottom: 6px; display: flex; flex-flow: row nowrap; padding: 0 15px; ">
                    <div class="fp_label" style="flex: auto 0 0; padding-right: 6px">
                        Title
                    </div>
                    <div style="flex: auto 1 1">
                        @Html.EditorFor(m => m.Title, "LocalizedString")
                    </div>
                </div>
            </div>
            <div class="col-md-12" style="margin-top: 14px">
                @if (Model.Fields.Count > 0)
                {
                    <div class="fields-title">
                        <div class="col-md-5"><label>Input fields</label></div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2"><label>System</label></div>
                        <div class="col-md-2"><label>Encrypted</label></div>
                        <div class="col-md-2"><label>Mandatory</label></div>
                    </div>
                }

                <ul class="fp_webFormBlockSectionFieldsList">
                    @{
                        for (int fieldNum = 0; fieldNum < Model.Fields.Count; fieldNum++)
                        {
                            @Html.EditorFor(m => m.Fields[fieldNum], "_WebFormFieldEditor")
                        }
                    }
                    @*<li class="ui-state-default">
                        </li>*@
                </ul>
                @if (!Model.ReadOnly)
                {
                    <div class="row">
                        <div class="col-md-12 text-center">
                            <div style="width: 100%; border: 2px solid white; background-color: #FFFFFF" ondragover="fp_webFormAllowFieldDrop(event)" ondrop="fp_webFormFieldsDrop(event, undefined, @Model.Index)" ondragenter="fp_webFormItemAppendAreaEnter(this)" ondragleave="fp_webFormItemAppendAreaLeave(this)">
                                Drop field from template (right pane) here to append it to section, or drag it out of this list to remove
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</li>
