@using System.Web.UI.WebControls;

@{
    var grid = Html.DevExpress().GridView<Flexpage.Models.EnumModel>(settings =>
    {
        settings.Name = "fp_EnumManager_Grid";
        settings.CallbackRouteValues = new { Controller = "Admin", Action = "EnumsGrid" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Admin", Action = "DeleteEnum", ID = ViewData["ID"] };
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Admin", Action = "AddEnum" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Admin", Action = "UpdateEnum" };
        settings.Width = Unit.Percentage(100);

        settings.Styles.AlternatingRow.CssClass = "alternate_row";
        settings.Styles.Row.CssClass = "main_row";
        settings.Styles.CommandColumn.CssClass = "command";

        settings.KeyFieldName = "ID";
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ButtonRenderMode = GridCommandButtonRenderMode.Image;

        GridViewCommandColumnCustomButton ItemsButton = new GridViewCommandColumnCustomButton() { ID = "btnItems", Text = "Items" };
        ItemsButton.Image.IconID = IconID.FilterelementsTreeview16x16;

        var bDelete = new GridViewCommandColumnCustomButton()
        {
            ID = "bDelete",
            Text = "Delete",
        };
        settings.CommandColumn.CustomButtons.Add(bDelete);
        settings.CommandColumn.CustomButtons.Add(ItemsButton);
        bDelete.Image.IconID = IconID.EditDelete16x16office2013;
        settings.SettingsCommandButton.EditButton.Image.IconID = IconID.EditEdit16x16office2013;
        settings.SettingsCommandButton.DeleteButton.Image.IconID = IconID.EditDelete16x16office2013;
        settings.SettingsCommandButton.NewButton.Image.IconID = IconID.ActionsAdd16x16;
        settings.SettingsCommandButton.CancelButton.Image.IconID = IconID.ActionsCancel16x16office2013;
        settings.SettingsCommandButton.UpdateButton.Image.IconID = IconID.SaveSave16x16office2013;

        settings.CommandColumn.Caption = "Actions";

        settings.Columns.Add(m => m.Name, column =>
        {
            column.Width = new Unit(100, UnitType.Percentage);
            column.SortIndex = 0;
            column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
        });

        //settings.Columns.Add(m => m.ID, column =>
        //{
        //    column.Width = new Unit(50, UnitType.Percentage);
        //    column.ReadOnly = true;
        //});

        settings.ClientSideEvents.Init = "function(s,e) { s.PerformCallback(); }";
        settings.ClientSideEvents.EndCallback = "fp_enumEndCallback";
        settings.ClientSideEvents.CustomButtonClick = "fp_enumListCustomButtonClick";
        settings.CustomJSProperties = (sender, e) =>
        {
            if (ViewData["EditError"] != null)
                e.Properties["cpEditError"] = ViewData["EditError"];
            else
                e.Properties["cpEditError"] = "";
        };
    });
}
@grid.Bind(Model).GetHtml()
