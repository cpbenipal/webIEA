@model FlexPage2.Models.LoginViewModel

@{
    ViewBag.Title = "Login";

    var returnUrl = Request.Params.Get("returnUrl");
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            @if (Request.IsAuthenticated)
            {
                <div class="fp-login-form is-login">
                    <div class="title">
                        <h1>Login</h1>
                    </div>
                    <p>Welcome, <b>@Html.Encode(Context.User.Identity.Name)</b>!</p>
                    <p>@Html.ActionLink("Logout", "Logout", "Account")</p>
                    <div class="footer">
                        
                    </div>

                </div>
            }
            else
            {
                <div class="fp-login-form">
                    <div class="title">
                        <h1>Login</h1>
                    </div>
                    @Html.ValidationSummary(true)
                    <p>Please log in to access the administrative area:</p>
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "LoginForm" }))
                    {
                        @Html.Hidden("returnUrl", returnUrl)
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        <div class="input-group">
                            <span class="input-group-addon"><span class="glyphicon glyphicon-user"></span></span>
                            @Html.TextBoxFor(m => m.UserName, new { type = "text", placeholder = "User name", @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        <div class="input-group">
                            <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span>
                            @Html.PasswordFor(m => m.Password, new { type = "password", placeholder = "Password", @class = "form-control" })
                            <span class="input-group-btn" id="btnShowPassword">
                                <button class="btn btn-default fp_eye-open" type="button"></button>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Save, "", new { @class = "text-danger" }) 
                        <div class="input-group input-group-Save">
                            @Html.CheckBoxFor(m => m.Save, new { type = "checkbox", @class = "fp_save-check-box" })
                            <label name="Save" for="Save" class="fp_checkmark"></label>
                            <span class="fp_label-keep-me"> Keep me logged in</span>
                        </div>
                        <p style="text-align: center;margin-bottom:15px;">
                            <input type="submit" class="btn btn-default" style="width:100%" value="Log in" onclick="fp_beforeLogin()">
                        </p>
                    }
                    <div class="footer">
                       
                    </div>

                </div>
            }
        </div>
    </div>
</div>
@if (!Request.IsAuthenticated)
{
    <script type="text/javascript">
        var fp_beforeLogin = function () {
            var password = document.getElementById("Password");
            password.setAttribute("type", "password");
        }
        $(function() {
            $("#btnShowPassword").on("mousedown", function () {
                $(this).css("opacity", "1");
                $("#Password").prop("type", "text");
            });

            $("#btnShowPassword").on("mouseup mouseleave", function () {
                $(this).css("opacity", "0.6");
                $("#Password").prop("type", "password");
            });

        });
    </script>
}